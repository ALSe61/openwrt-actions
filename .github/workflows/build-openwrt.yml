name: Build OpenWrt

on:
    workflow_dispatch:
    
env:
  REPO_URL: 'https://git.openwrt.org/openwrt/openwrt.git'
  BRANCH: 'openwrt-22.03'
  TAG: 'v22.03.0-rc4'
  UPLOAD_FIRMWARE: true
  UPLOAD_RELEASE: true
  TZ: Asia/Yekaterinburg

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@main

    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install wget curl megatools gettext dialog apt-utils build-essential asciidoc binutils bzip2 git \
        libncurses5-dev libz-dev patch python3-distutils python3 python3-setuptools gawk python3-dev unzip zlib1g-dev \
        libc6-dev-i386 subversion flex uglifyjs gcc p7zip-full libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx \
        libelf-dev autoconf automake libtool autopoint device-tree-compiler g++ antlr3 gperf swig rsync ccache ecj \
        fastjar file xsltproc time tmate java-propose-classpath libmnl-dev openssh-server etherwake libnfnetlink-dev \
        mc libncursesw5-dev python2.7-dev
        
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        sudo timedatectl set-timezone "$TZ"
        sudo mkdir -p /workdir
        sudo chown $USER:$GROUPS /workdir

    - name: Clone source code
      working-directory: /workdir
      run: |
        df -hT $PWD
        git clone $REPO_URL -b $BRANCH openwrt
        ln -sf /workdir/openwrt $GITHUB_WORKSPACE/openwrt

    - name: Load custom feeds
      run: |
        cd openwrt
        git checkout $TAG
        sed -i '/ telephony /s/^/#/' ./feeds.conf.default
        git clone  'https://github.com/chenhw2/openwrt-v2ray-plugin.git' ./package/v2ray-plugin

    - name: Update feeds
      run: cd openwrt && ./scripts/feeds update -a

    - name: Install feeds
      run: cd openwrt && ./scripts/feeds install -a

    - name: Load custom configuration
      run: |
        mkdir openwrt/files
        megadl --path openwrt/files "$FILES_LINK"
        mv ./.config openwrt/
    
    - name: Load MTK drivers
      run: |
        cd openwrt
        git clone 'https://github.com/ALSe61/openwrt-r3p-mtk'
        rsync -av openwrt-r3p-mtk/ . --exclude '.git'
      
    - name: Download package
      id: package
      run: |
        cd openwrt
        make defconfig
        make download -j8
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;

    - name: Compile the firmware
      id: compile
      run: |
        cd openwrt
        echo -e "$(nproc) thread compile"
        make -j$(nproc) || make -j1 || make -j1 V=s
        echo "::set-output name=status::success"
        grep '^CONFIG_TARGET.*DEVICE.*=y' .config | sed -r 's/.*DEVICE_(.*)=y/\1/' > DEVICE_NAME
        [ -s DEVICE_NAME ] && echo "DEVICE_NAME=_$(cat DEVICE_NAME)" >> $GITHUB_ENV
        echo "FILE_DATE=_$(date +"%Y%m%d%H%M")" >> $GITHUB_ENV

    - name: Check space usage
      if: (!cancelled())
      run: df -hT

    - name: Organize files
      id: organize
      if: env.UPLOAD_FIRMWARE == 'true' && !cancelled()
      run: |
        PACKAGES=$(find $GITHUB_WORKSPACE/openwrt/bin/targets -type d -name 'packages')
        cd $PACKAGES && cd ..
        rm -rf ./packages
        FACTORY="$(find ./*-factory.bin -maxdepth 1 -type f)"
        dd if="$FACTORY" bs=4M count=1 | cat - "$FACTORY" > "pbboot_breed_${FACTORY##*/}"
        echo "FIRMWARE=$PWD" >> $GITHUB_ENV
        echo "::set-output name=status::success"

    - name: Upload firmware directory
      uses: actions/upload-artifact@main
      if: steps.organize.outputs.status == 'success' && !cancelled()
      with:
        name: OpenWrt_firmware${{ env.DEVICE_NAME }}${{ env.FILE_DATE }}
        path: ${{ env.FIRMWARE }}

    - name: Generate release tag
      id: tag
      if: env.UPLOAD_RELEASE == 'true' && !cancelled()
      run: |
        echo "::set-output name=release_tag::$(date +"%Y.%m.%d-%H%M")"
        touch release.txt
        echo "::set-output name=status::success"

    - name: Upload firmware to release
      uses: softprops/action-gh-release@v1
      if: steps.tag.outputs.status == 'success' && !cancelled()
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.tag.outputs.release_tag }}
        body_path: release.txt
        files: ${{ env.FIRMWARE }}/*

    - name: Delete workflow runs
      uses: GitRML/delete-workflow-runs@main
      with:
        retain_days: 1
        keep_minimum_runs: 3

    - name: Remove old Releases
      uses: dev-drprasad/delete-older-releases@v0.1.0
      if: env.UPLOAD_RELEASE == 'true' && !cancelled()
      with:
        keep_latest: 3
        delete_tags: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
